

	.FUNCT	RT-AUTHOR-MSG:ANY:1:1,STR
	DIROUT	D-TABLE-ON,K-DIROUT-TBL
	PRINT	STR
	CALL1	RT-AUTHOR-OFF
	RSTACK	


	.FUNCT	RT-AUTHOR-OFF:ANY:0:0,WY,WX,Y,X,W,AY,N,L,PTR,SP?,?TMP1
	DIROUT	D-TABLE-OFF
	GRTR?	GL-AUTHOR-SIZE,0 \?CND1
	ICALL1	RT-AUTHOR-CLEAR
?CND1:	CALL2	RT-COUNT-LINES,K-DIROUT-TBL >GL-AUTHOR-SIZE
	MUL	GL-AUTHOR-SIZE,GL-FONT-Y >AY
	SCROLL	0,AY
	WINGET	0,K-W-YCURPOS
	SUB	STACK,AY >Y
	WINGET	0,K-W-XCURPOS >X
	WINGET	0,K-W-YSIZE
	SUB	STACK,AY >WY
	WINGET	0,K-W-XSIZE >WX
	WINSIZE	0,WY,WX
	GRTR?	Y,0 \?CCL5
	CURSET	Y,X
	JUMP	?CND3
?CCL5:	CURSET	1,X
?CND3:	WINGET	0,K-W-YPOS
	ADD	STACK,WY >?TMP1
	WINGET	0,K-W-XPOS
	WINPOS	3,?TMP1,STACK
	WINSIZE	3,AY,WX
	WINATTR	3,A-WRAP,O-SET
	WINATTR	3,A-SCRIPT,O-SET
	WINATTR	3,A-BUFFER,O-SET
	CLEAR	3
	SCREEN	3
	CURSET	1,1
	HLIGHT	K-H-INV
	GRTR?	GL-AUTHOR-SIZE,1 \?CCL8
	GET	K-DIROUT-TBL,0 >N
	SET	'PTR,K-DIROUT-TBL+2
?PRG9:	GRTR?	N,0 \?CND6
	GETB	0,33 >L
	SET	'SP?,FALSE-VALUE
	GRTR?	N,L \?CCL16
?PRG17:	SUB	L,1
	GETB	PTR,STACK
	EQUAL?	STACK,32 \?CCL21
	SET	'SP?,TRUE-VALUE
	JUMP	?CND14
?CCL21:	DLESS?	'L,1 \?PRG17
	GETB	0,33 >L
	JUMP	?CND14
?CCL16:	SET	'L,N
?CND14:	ZERO?	SP? /?CCL25
	SUB	L,1
	PRINTT	PTR,STACK
	JUMP	?CND23
?CCL25:	PRINTT	PTR,L
?CND23:	SUB	N,L >N
	ADD	PTR,L >PTR
	WINGET	3,K-W-XSIZE >?TMP1
	WINGET	3,K-W-XCURPOS
	SUB	?TMP1,STACK
	DIV	STACK,GL-SPACE-WIDTH >L
	GRTR?	L,0 \?CND26
	PUTB	K-DIROUT-TBL,0,32
	SUB	0,L
	COPYT	K-DIROUT-TBL,K-DIROUT-TBL+1,STACK
	PRINTT	K-DIROUT-TBL,L
?CND26:	CRLF	
	JUMP	?PRG9
?CCL8:	GET	K-DIROUT-TBL,0
	PRINTT	K-DIROUT-TBL+2,STACK
	WINGET	3,K-W-XSIZE >?TMP1
	WINGET	3,K-W-XCURPOS
	SUB	?TMP1,STACK
	DIV	STACK,GL-SPACE-WIDTH >L
	GRTR?	L,0 \?CND6
	PUTB	K-DIROUT-TBL,0,32
	SUB	0,L
	COPYT	K-DIROUT-TBL,K-DIROUT-TBL+1,STACK
	PRINTT	K-DIROUT-TBL,L
?CND6:	HLIGHT	K-H-NRM
	SCREEN	0
	RTRUE	


	.FUNCT	RT-AUTHOR-CLEAR:ANY:0:0,WY,WX,Y,X
	GRTR?	GL-AUTHOR-SIZE,0 \FALSE
	CLEAR	3
	WINGET	0,K-W-YCURPOS >Y
	WINGET	0,K-W-XCURPOS >X
	WINGET	0,K-W-YSIZE >WY
	WINGET	0,K-W-XSIZE >WX
	MUL	GL-AUTHOR-SIZE,GL-FONT-Y
	ADD	WY,STACK
	WINSIZE	0,STACK,WX
	CURSET	Y,X
	SET	'GL-AUTHOR-SIZE,0
	SCREEN	0
	RTRUE	


	.FUNCT	RT-COUNT-LINES:ANY:1:1,TBL,TW,W,CNT
	GET	0,24 >TW
	WINGET	0,K-W-XSIZE >W
	LESS?	TW,W /TRUE
	DIV	TW,10
	ADD	TW,STACK >TW
	DIV	TW,W >CNT
	MOD	TW,W
	GRTR?	STACK,0 /?CCL5
	RETURN	CNT
?CCL5:	INC	'CNT
	RETURN	CNT


	.FUNCT	RT-EARNED-MSG:ANY:1:1,N
	GRTR?	N,0 \?CCL3
	PRINTI	"earned"
	RTRUE	
?CCL3:	PRINTI	"lost"
	RTRUE	


	.FUNCT	RT-POINT-MSG:ANY:4:4,STR,PT,PREV,MORE?
	ZERO?	PREV /?CND1
	ICALL2	RT-COMMA-MSG,MORE?
?CND1:	ZERO?	PREV /?CCL4
	LESS?	PT,0 /?PRD8
	LESS?	PREV,0 \?CND3
?PRD8:	GRTR?	PT,0 /?CCL4
	GRTR?	PREV,0 \?CND3
?CCL4:	PRINTC	32
	ICALL2	RT-EARNED-MSG,PT
?CND3:	LESS?	PT,0 \?CCL15
	SUB	0,PT
	JUMP	?CND13
?CCL15:	PUSH	PT
?CND13:	ICALL2	RT-WORD-NUMBERS,STACK
	PRINTC	32
	PRINT	STR
	PRINTI	" point"
	LESS?	PT,0 \?CCL21
	SUB	0,PT
	JUMP	?CND19
?CCL21:	PUSH	PT
?CND19:	EQUAL?	STACK,1 /FALSE
	PRINTC	115
	RTRUE	


	.FUNCT	RT-SCORE-MSG:ANY:4:5,CHV,WIS,EXP,QST,NL?,N,I
	ASSIGNED?	'NL? /?CND1
	SET	'NL?,TRUE-VALUE
?CND1:	ZERO?	CHV \?CCL5
	ZERO?	WIS \?CCL5
	ZERO?	EXP \?CCL5
	ZERO?	QST /FALSE
?CCL5:	ADD	GL-SC-CHV,CHV >GL-SC-CHV
	ADD	GL-SC-WIS,WIS >GL-SC-WIS
	ADD	GL-SC-EXP,EXP >GL-SC-EXP
	ADD	GL-SC-QST,QST >GL-SC-QST
	ZERO?	GL-NOTIFY-SCORE? /?CND10
	ZERO?	NL? /?CND12
	CRLF	
?CND12:	HLIGHT	H-BOLD
	PRINTI	"[You have"
	ZERO?	CHV /?CND14
	ZERO?	WIS /?PRD18
	PUSH	WIS
	JUMP	?PEN16
?PRD18:	ZERO?	EXP /?PRD19
	PUSH	EXP
	JUMP	?PEN16
?PRD19:	PUSH	QST
?PEN16:	ICALL	RT-POINT-MSG,STR?90,CHV,N,STACK
	SET	'N,CHV
?CND14:	ZERO?	WIS /?CND20
	ZERO?	EXP /?PRD24
	PUSH	EXP
	JUMP	?PEN22
?PRD24:	PUSH	QST
?PEN22:	ICALL	RT-POINT-MSG,STR?91,WIS,N,STACK
	SET	'N,WIS
?CND20:	ZERO?	EXP /?CND25
	ICALL	RT-POINT-MSG,STR?92,EXP,N,QST
	SET	'N,EXP
?CND25:	ZERO?	QST /?CND27
	ICALL	RT-POINT-MSG,STR?93,QST,N,FALSE-VALUE
	SET	'N,QST
?CND27:	PRINTI	".]"
	HLIGHT	H-NORMAL
	ZERO?	NL? /?CND10
	CRLF	
?CND10:	EQUAL?	GL-WINDOW-TYPE,K-WIN-STAT \TRUE
	ICALL1	RT-UPDATE-STAT-WINDOW
	RTRUE	


	.FUNCT	RT-SCORE-OBJ:ANY:1:2,OBJ,NL?,SC,?TMP1,?TMP2
	ASSIGNED?	'NL? /?CND1
	SET	'NL?,TRUE-VALUE
?CND1:	GETP	OBJ,P?SCORE >SC
	ZERO?	SC /FALSE
	SHIFT	SC,-10
	MOD	STACK,32 >?TMP2
	SHIFT	SC,-5
	MOD	STACK,32 >?TMP1
	SHIFT	SC,0
	MOD	STACK,32
	ICALL	RT-SCORE-MSG,0,?TMP2,?TMP1,STACK,NL?
	PUTP	OBJ,P?SCORE,0
	RTRUE	


	.FUNCT	V-SCORE:ANY:0:0
	PRINTI	"You have"
	ICALL2	RT-WORD-NUMBERS,GL-SC-CHV
	PRINTI	" chivalry point"
	LESS?	GL-SC-CHV,0 \?CCL5
	SUB	0,GL-SC-CHV
	JUMP	?CND3
?CCL5:	PUSH	GL-SC-CHV
?CND3:	EQUAL?	STACK,1 /?CND1
	PRINTC	115
?CND1:	PRINTC	44
	ICALL2	RT-WORD-NUMBERS,GL-SC-WIS
	PRINTI	" wisdom point"
	LESS?	GL-SC-WIS,0 \?CCL10
	SUB	0,GL-SC-WIS
	JUMP	?CND8
?CCL10:	PUSH	GL-SC-WIS
?CND8:	EQUAL?	STACK,1 /?CND6
	PRINTC	115
?CND6:	PRINTC	44
	ICALL2	RT-WORD-NUMBERS,GL-SC-EXP
	PRINTI	" experience point"
	LESS?	GL-SC-EXP,0 \?CCL15
	SUB	0,GL-SC-EXP
	JUMP	?CND13
?CCL15:	PUSH	GL-SC-EXP
?CND13:	EQUAL?	STACK,1 /?CND11
	PRINTC	115
?CND11:	PRINTI	", and"
	ICALL2	RT-WORD-NUMBERS,GL-SC-QST
	PRINTI	" quest point"
	LESS?	GL-SC-QST,0 \?CCL20
	SUB	0,GL-SC-QST
	JUMP	?CND18
?CCL20:	PUSH	GL-SC-QST
?CND18:	EQUAL?	STACK,1 /?CND16
	PRINTC	115
?CND16:	PRINTR	"."


	.FUNCT	V-NOTIFY:ANY:0:1,VAL
	PRINTI	"[Score notification turned "
	ASSIGNED?	'VAL \?CCL3
	SET	'GL-NOTIFY-SCORE?,VAL
	JUMP	?CND1
?CCL3:	ZERO?	GL-NOTIFY-SCORE? /?PRT4
	SET	'GL-NOTIFY-SCORE?,0
	JUMP	?CND1
?PRT4:	SET	'GL-NOTIFY-SCORE?,1
?CND1:	ZERO?	GL-NOTIFY-SCORE? /?CCL9
	PRINTI	"on"
	JUMP	?CND7
?CCL9:	PRINTI	"off"
?CND7:	PRINTR	".]"


	.FUNCT	V-NOTIFY-ON:ANY:0:0
	EQUAL?	PRSO,ROOMS \?CCL3
	CALL2	V-NOTIFY,TRUE-VALUE
	RSTACK	
?CCL3:	CALL1	DONT-UNDERSTAND
	RSTACK	


	.FUNCT	V-NOTIFY-OFF:ANY:0:0
	EQUAL?	PRSO,ROOMS \?CCL3
	CALL2	V-NOTIFY,FALSE-VALUE
	RSTACK	
?CCL3:	CALL1	DONT-UNDERSTAND
	RSTACK	


	.FUNCT	V-$STEAL:ANY:0:0
	CALL	RT-DO-TAKE,PRSO,TRUE-VALUE
	ZERO?	STACK /TRUE
	SET	'CLOCK-WAIT,TRUE-VALUE
	ICALL	RT-PRINT-OBJ,PRSO,K-ART-THE,TRUE-VALUE,STR?94
	PRINTR	" in your hand."


	.FUNCT	V-$GOTO:ANY:0:0,OBJ
	IN?	PRSO,ROOMS \?CCL3
	CALL2	RT-GOTO,PRSO
	RSTACK	
?CCL3:	LOC	PRSO >OBJ
?PRG4:	IN?	OBJ,ROOMS /?REP5
	LOC	OBJ
	EQUAL?	STACK,LOCAL-GLOBALS,GLOBAL-OBJECTS,FALSE-VALUE /?REP5
	LOC	OBJ >OBJ
	JUMP	?PRG4
?REP5:	IN?	OBJ,ROOMS \?CCL13
	PRINTC	91
	ICALL2	RT-PRINT-DESC,OBJ
	PRINTC	93
	CRLF	
	CALL2	RT-GOTO,OBJ
	RSTACK	
?CCL13:	ICALL	RT-PRINT-OBJ,PRSO,K-ART-THE,TRUE-VALUE,STR?69
	PRINTR	"n't in a room."


	.FUNCT	V-$PASSWORD:ANY:0:0
	PRINTR	"You don't need to use a password right now."


	.FUNCT	V-VERSION:ANY:0:0,IDX
	SET	'IDX,18
	HLIGHT	K-H-BLD
	PRINTI	"Arthur: The Quest for Excalibur
Copyright (c) 1989 Infocom, Inc. All rights reserved.
Arthur: The Quest for Excalibur is a trademark of Infocom, Inc."
	CRLF	
	GETB	0,30
	GET	K-MACHINE-NAME-TBL,STACK
	PRINT	STACK
	PRINTI	" Interpreter version "
	GETB	0,0
	PRINTN	STACK
	PRINTC	46
	GETB	0,31
	PRINTN	STACK
	CRLF	
	PRINTI	"Release "
	GET	0,1
	BAND	STACK,2047
	PRINTN	STACK
	PRINTI	" / Serial Number "
?PRG1:	GETB	0,IDX
	PRINTC	STACK
	IGRTR?	'IDX,23 \?PRG1
	CRLF	
	HLIGHT	K-H-NRM
	RTRUE	


	.FUNCT	V-COLOR:ANY:0:0,S
	ZERO?	GL-COLOR-NOTE \?CND1
	SET	'GL-COLOR-NOTE,TRUE-VALUE
	PRINTI	"Aesthetically, we recommend not changing the standard setting. "
	GETB	0,30
	EQUAL?	STACK,MACINTOSH \?CND3
	CALL1	MAC-II?
	ZERO?	STACK /?CCL7
	PRINTI	"Also, if your Mac II displays only 16 colors, you probably won't get the color you ask for. "
	JUMP	?CND3
?CCL7:	PRINTI	"Also, you can have only black on white or white on black. "
?CND3:	PRINTI	"Do you still want to go ahead?"
	CRLF	
	CALL1	Y?
	ZERO?	STACK /TRUE
?CND1:	CRLF	
?PRG10:	ICALL1	RT-DO-COLOR
	PRINTI	"You should now get "
	GET	K-COLOR-TABLE,GL-F-COLOR
	PRINT	STACK
	PRINTI	" text on a "
	GET	K-COLOR-TABLE,GL-B-COLOR
	PRINT	STACK
	PRINTI	" background. Is that what you want?
"
	CALL1	Y?
	ZERO?	STACK \?REP11
	GETB	0,30
	EQUAL?	STACK,MACINTOSH \?CND14
	CALL1	MAC-II?
	ZERO?	STACK \?CND14
	EQUAL?	GL-B-COLOR,2 \?CCL20
	SET	'GL-B-COLOR,9
	SET	'GL-F-COLOR,2
	JUMP	?REP11
?CCL20:	SET	'GL-B-COLOR,2
	SET	'GL-F-COLOR,9
	JUMP	?REP11
?CND14:	PRINTI	"
Do you want to pick again, or would you like to just go back to the standard colors? (Type Y to pick again) >"
	CALL2	Y?,FALSE-VALUE
	ZERO?	STACK /?CCL23
	CRLF	
	JUMP	?PRG10
?CCL23:	SET	'GL-F-COLOR,1
	SET	'GL-B-COLOR,1
?REP11:	SET	'S,0
?PRG24:	SCREEN	S
	COLOR	GL-F-COLOR,GL-B-COLOR
	IGRTR?	'S,7 \?PRG24
	CALL1	V-$REFRESH
	RSTACK	


	.FUNCT	RT-DO-COLOR:ANY:0:0
	GETB	0,30
	EQUAL?	STACK,MACINTOSH \?CCL3
	CALL1	MAC-II?
	ZERO?	STACK \?CCL3
	EQUAL?	GL-B-COLOR,2 \?CCL8
	SET	'GL-B-COLOR,9
	SET	'GL-F-COLOR,2
	RETURN	GL-F-COLOR
?CCL8:	SET	'GL-B-COLOR,2
	SET	'GL-F-COLOR,9
	RETURN	GL-F-COLOR
?CCL3:	CALL	RT-PICK-COLOR,GL-F-COLOR,STR?105,TRUE-VALUE >GL-F-COLOR
	CALL	RT-PICK-COLOR,GL-B-COLOR,STR?106 >GL-B-COLOR
	RETURN	GL-B-COLOR


	.FUNCT	RT-PICK-COLOR:ANY:2:3,WHICH,STRING,SETTING-FG,CHAR
	PRINTI	"The current "
	PRINT	STRING
	PRINTI	" color is "
	GET	K-COLOR-TABLE,WHICH
	PRINT	STACK
	PRINTC	46
	CRLF	
	FONT	4
	PRINTI	"   1 --> WHITE   5 --> YELLOW"
	CRLF	
	PRINTI	"   2 --> BLACK   6 --> BLUE"
	CRLF	
	PRINTI	"   3 --> RED     7 --> MAGENTA"
	CRLF	
	PRINTI	"   4 --> GREEN   8 --> CYAN"
	CRLF	
	FONT	1
	PRINTI	"Type a number to select the "
	PRINT	STRING
	PRINTI	" color you want. >"
?PRG1:	ZERO?	DEMO-VERSION? /?CCL5
	CALL2	INPUT-DEMO,1 >CHAR
	JUMP	?CND3
?CCL5:	INPUT	1 >CHAR
?CND3:	SUB	CHAR,48 >CHAR
	EQUAL?	CHAR,1 \?CND6
	SET	'CHAR,9
?CND6:	EQUAL?	CHAR,2,3,4 /?CTR9
	EQUAL?	CHAR,5,6,7 /?CTR9
	EQUAL?	CHAR,8,9 \?CCL10
?CTR9:	ZERO?	SETTING-FG \?REP2
	EQUAL?	CHAR,GL-F-COLOR \?REP2
	PRINTI	"
You can't make the background the same color as the text. Please pick another color. >"
	JUMP	?PRG1
?CCL10:	CRLF	
	PRINT	K-TYPE-NUMBER-MSG
	PRINTI	"8. >"
	JUMP	?PRG1
?REP2:	CRLF	
	CRLF	
	RETURN	CHAR


	.FUNCT	MAC-II?:ANY:0:0
	GET	0,8
	BTST	STACK,64 /TRUE
	RFALSE	


	.FUNCT	Y?:ANY:0:1,P?,C,1ST?
	ASSIGNED?	'P? /?CND1
	SET	'P?,TRUE-VALUE
?CND1:	SET	'1ST?,TRUE-VALUE
?PRG3:	ZERO?	P? /?CND5
	PRINTI	"Please press Y or N >"
?CND5:	ZERO?	DEMO-VERSION? /?CCL9
	CALL2	INPUT-DEMO,1 >C
	JUMP	?CND7
?CCL9:	INPUT	1 >C
?CND7:	EQUAL?	C,89,78,121 /?CTR11
	EQUAL?	C,110 \?CCL12
?CTR11:	PRINTC	C
	CRLF	
	EQUAL?	C,89,121 /TRUE
	RFALSE	
?CCL12:	SOUND	S-BEEP
	ZERO?	P? /?PRG3
	CRLF	
	JUMP	?PRG3


	.FUNCT	RT-CHECK-ADJ:ANY:1:1,DOOR
	EQUAL?	DOOR,LG-CELL-DOOR \?CCL3
	CALL	RT-UPDATE-ADJ,LG-CELL-DOOR,RM-CELL,RM-HALL
	RSTACK	
?CCL3:	EQUAL?	DOOR,LG-IVORY-DOOR \?CCL5
	CALL	RT-UPDATE-ADJ,LG-CELL-DOOR,RM-TOW-CLEARING,RM-CIRC-ROOM
	RSTACK	
?CCL5:	EQUAL?	DOOR,LG-WOODEN-DOOR \FALSE
	CALL	RT-UPDATE-ADJ,LG-CELL-DOOR,RM-LANDING,RM-TOWER-ROOM
	RSTACK	


	.FUNCT	RT-UPDATE-ADJ:ANY:3:3,DOOR,RM1,RM2,TMP1,TMP2,?TMP1
	GETP	RM1,P?ADJACENT >TMP2
	ZERO?	TMP2 /?CND1
	ADD	TMP2,1 >?TMP1
	GETB	TMP2,0
	INTBL?	RM2,?TMP1,STACK,1 >TMP1 \?CND1
	FSET?	DOOR,FL-OPEN /?PRD5
	PUSH	0
	JUMP	?PRD6
?PRD5:	PUSH	1
?PRD6:	PUTB	TMP1,1,STACK
?CND1:	GETP	RM2,P?ADJACENT >TMP2
	ZERO?	TMP2 /FALSE
	ADD	TMP2,1 >?TMP1
	GETB	TMP2,0
	INTBL?	RM1,?TMP1,STACK,1 >TMP1 \FALSE
	FSET?	DOOR,FL-OPEN /?PRD13
	PUSH	0
	JUMP	?PRD14
?PRD13:	PUSH	1
?PRD14:	PUTB	TMP1,1,STACK
	RTRUE	


	.FUNCT	RT-WORD-NUMBERS:ANY:1:2,COUNT,1ST?,N
	ASSIGNED?	'1ST? /?CND1
	SET	'1ST?,TRUE-VALUE
?CND1:	ZERO?	1ST? /?CND3
	PRINTC	32
	LESS?	COUNT,0 \?CND3
	PRINTI	"negative "
	LESS?	COUNT,0 \?CND3
	SUB	0,COUNT >COUNT
?CND3:	ZERO?	COUNT \?CCL12
	PRINTI	"zero"
	RTRUE	
?CCL12:	EQUAL?	COUNT,1 \?CCL14
	PRINTI	"one"
	RTRUE	
?CCL14:	EQUAL?	COUNT,2 \?CCL16
	PRINTI	"two"
	RTRUE	
?CCL16:	EQUAL?	COUNT,3 \?CCL18
	PRINTI	"three"
	RTRUE	
?CCL18:	EQUAL?	COUNT,4 \?CCL20
	PRINTI	"four"
	RTRUE	
?CCL20:	EQUAL?	COUNT,5 \?CCL22
	PRINTI	"five"
	RTRUE	
?CCL22:	EQUAL?	COUNT,6 \?CCL24
	PRINTI	"six"
	RTRUE	
?CCL24:	EQUAL?	COUNT,7 \?CCL26
	PRINTI	"seven"
	RTRUE	
?CCL26:	EQUAL?	COUNT,8 \?CCL28
	PRINTI	"eight"
	RTRUE	
?CCL28:	EQUAL?	COUNT,9 \?CCL30
	PRINTI	"nine"
	RTRUE	
?CCL30:	EQUAL?	COUNT,10 \?CCL32
	PRINTI	"ten"
	RTRUE	
?CCL32:	EQUAL?	COUNT,11 \?CCL34
	PRINTI	"eleven"
	RTRUE	
?CCL34:	EQUAL?	COUNT,12 \?CCL36
	PRINTI	"twelve"
	RTRUE	
?CCL36:	EQUAL?	COUNT,13 \?CCL38
	PRINTI	"thirteen"
	RTRUE	
?CCL38:	EQUAL?	COUNT,14 \?CCL40
	PRINTI	"fourteen"
	RTRUE	
?CCL40:	EQUAL?	COUNT,15 \?CCL42
	PRINTI	"fifteen"
	RTRUE	
?CCL42:	EQUAL?	COUNT,16 \?CCL44
	PRINTI	"sixteen"
	RTRUE	
?CCL44:	EQUAL?	COUNT,17 \?CCL46
	PRINTI	"seventeen"
	RTRUE	
?CCL46:	EQUAL?	COUNT,18 \?CCL48
	PRINTI	"eighteen"
	RTRUE	
?CCL48:	EQUAL?	COUNT,19 \?CCL50
	PRINTI	"nineteen"
	RTRUE	
?CCL50:	EQUAL?	COUNT,20 \?CCL52
	PRINTI	"twenty"
	RTRUE	
?CCL52:	EQUAL?	COUNT,30 \?CCL54
	PRINTI	"thirty"
	RTRUE	
?CCL54:	EQUAL?	COUNT,40 \?CCL56
	PRINTI	"forty"
	RTRUE	
?CCL56:	EQUAL?	COUNT,50 \?CCL58
	PRINTI	"fifty"
	RTRUE	
?CCL58:	EQUAL?	COUNT,60 \?CCL60
	PRINTI	"sixty"
	RTRUE	
?CCL60:	EQUAL?	COUNT,70 \?CCL62
	PRINTI	"seventy"
	RTRUE	
?CCL62:	EQUAL?	COUNT,80 \?CCL64
	PRINTI	"eighty"
	RTRUE	
?CCL64:	EQUAL?	COUNT,90 \?CCL66
	PRINTI	"ninety"
	RTRUE	
?CCL66:	LESS?	COUNT,100 \?CCL68
	MOD	COUNT,10 >N
	SUB	COUNT,N
	ICALL	RT-WORD-NUMBERS,STACK,FALSE-VALUE
	PRINTC	45
	CALL	RT-WORD-NUMBERS,N,FALSE-VALUE
	RSTACK	
?CCL68:	LESS?	COUNT,1000 \?CCL70
	DIV	COUNT,100
	ICALL	RT-WORD-NUMBERS,STACK,FALSE-VALUE
	PRINTI	" hundred"
	MOD	COUNT,100
	GRTR?	STACK,0 \FALSE
	PRINTI	" and "
	MOD	COUNT,100
	CALL	RT-WORD-NUMBERS,STACK,FALSE-VALUE
	RSTACK	
?CCL70:	DIV	COUNT,1000
	ICALL	RT-WORD-NUMBERS,STACK,FALSE-VALUE
	PRINTI	" thousand"
	MOD	COUNT,1000
	GRTR?	STACK,0 \FALSE
	PRINTI	", "
	MOD	COUNT,1000
	CALL	RT-WORD-NUMBERS,STACK,FALSE-VALUE
	RSTACK	


	.FUNCT	RT-TIME-OF-DAY?:ANY:1:3,TIME1,TIME2,TIME3,MIN
	ASSIGNED?	'TIME2 /?CND1
	SET	'TIME2,-1
?CND1:	ASSIGNED?	'TIME3 /?CND3
	SET	'TIME3,-1
?CND3:	MOD	GL-MOVES,1440 >MIN
	LESS?	MIN,360 \?CCL7
	EQUAL?	K-NIGHT,TIME1,TIME2,TIME3 /TRUE
	RFALSE	
?CCL7:	LESS?	MIN,540 \?CCL11
	EQUAL?	K-EARLY-MORNING,TIME1,TIME2,TIME3 /TRUE
	RFALSE	
?CCL11:	LESS?	MIN,720 \?CCL15
	EQUAL?	K-MORNING,TIME1,TIME2,TIME3 /TRUE
	RFALSE	
?CCL15:	LESS?	MIN,1050 \?CCL19
	EQUAL?	K-AFTERNOON,TIME1,TIME2,TIME3 /TRUE
	RFALSE	
?CCL19:	LESS?	MIN,1140 \?CCL23
	EQUAL?	K-EVENING,TIME1,TIME2,TIME3 /TRUE
	RFALSE	
?CCL23:	EQUAL?	K-NIGHT,TIME1,TIME2,TIME3 /TRUE
	RFALSE	


	.FUNCT	RT-STOP-READ:ANY:0:0
	RTRUE	


	.FUNCT	RT-END-OF-GAME:ANY:0:2,WIN?,REPEAT,VAL,MSG?,M?,?TMP1
	SET	'MSG?,TRUE-VALUE
	ICALL1	UPDATE-STATUS-LINE
	ZERO?	REPEAT \?PRG11
	CRLF	
	ADD	K-DEMON-DOMAIN-TBL,1 >?TMP1
	GETB	K-DEMON-DOMAIN-TBL,0
	INTBL?	HERE,?TMP1,STACK,1 \?CCL5
	PRINTI	"You hear Merlin's voice faintly in your ears, ""You have failed, Arthur. England is doomed.""

"
	JUMP	?PRG11
?CCL5:	SET	'M?,TRUE-VALUE
	PRINTI	"Merlin "
	IN?	CH-MERLIN,HERE /?CND6
	PRINTI	"appears before you and "
?CND6:	PRINTI	"says "
	ZERO?	WIN? /?CCL10
	PRINTI	"""You have done well, Arthur. Your reign will be long and, at times, peaceful. I must leave you now for a long journey. But rest assured my young friend - when you have need of me, I will be there.

Before I go, I shall"
	JUMP	?CND8
?CCL10:	PRINTI	"sadly, ""You have failed in your quest, Arthur. Dark days lie ahead for all England.""

""However, it is within my power to"
?CND8:	PRINTI	" grant you one final wish. "
?PRG11:	ZERO?	REPEAT /?CCL15
	CRLF	
	ZERO?	M? /?CND13
	PRINTC	34
	JUMP	?CND13
?CCL15:	SET	'REPEAT,TRUE-VALUE
?CND13:	PRINTI	"Do you want to "
	ZERO?	P-CAN-UNDO /?CND18
	PRINTI	"Undo, "
?CND18:	PRINTI	"Restore, Restart, Quit, or get a Hint?"
	ZERO?	M? /?CND20
	PRINTC	34
?CND20:	CRLF	
?PRG22:	PRINTC	62
	PUTB	P-INBUF,1,0
?PRG24:	READ	P-INBUF,P-LEXV >VAL
	EQUAL?	VAL,10,13 /?REP25
	ICALL2	RT-HOT-KEY,VAL
	JUMP	?PRG24
?REP25:	GET	P-LEXV,P-LEXSTART >VAL
	ZERO?	P-CAN-UNDO /?CCL31
	EQUAL?	VAL,W?UNDO \?CCL31
	ZERO?	M? /?CND34
	PRINT	K-MERLIN-NODS-MSG
	CRLF	
	INPUT	1,20,RT-STOP-READ
?CND34:	ICALL1	V-UNDO
	ZERO?	M? /?PRG11
	PRINT	K-MERLIN-SORRY-MSG
	CRLF	
	JUMP	?PRG11
?CCL31:	EQUAL?	VAL,W?RESTART \?CCL39
	ZERO?	M? /?CND40
	PRINT	K-MERLIN-NODS-MSG
	CRLF	
	INPUT	1,20,RT-STOP-READ
?CND40:	RESTART	
	ZERO?	M? /?PRG11
	PRINT	K-MERLIN-SORRY-MSG
	CRLF	
	JUMP	?PRG11
?CCL39:	EQUAL?	VAL,W?RESTORE \?CCL45
	ZERO?	M? /?CND46
	PRINTI	"""Very well. What is the name of the file?"""
	CRLF	
?CND46:	ICALL1	V-RESTORE
	ZERO?	M? /?PRG11
	PRINT	K-MERLIN-SORRY-MSG
	CRLF	
	JUMP	?PRG11
?CCL45:	EQUAL?	VAL,W?QUIT,W?Q \?CCL51
	ZERO?	M? /?CND52
	PRINTC	34
?CND52:	PRINTI	"Are you sure you want to quit?"
	ZERO?	M? /?CND54
	PRINTI	""" he asks."
?CND54:	CALL2	YES?,TRUE-VALUE
	ZERO?	STACK /?PRG11
	ZERO?	M? /?CND59
	PRINTI	"Merlin bows his head and murmurs, ""So be it."""
	CRLF	
	INPUT	1,20,RT-STOP-READ
?CND59:	QUIT	
	ZERO?	M? /?PRG22
	PRINT	K-MERLIN-SORRY-MSG
	CRLF	
	JUMP	?PRG22
?CCL51:	EQUAL?	VAL,W?HINT \?CCL64
	IN?	CH-PLAYER,RM-CRYSTAL-CAVE /?CND65
	ZERO?	M? /?CND65
	ZERO?	MSG? /?CND65
	PRINTI	"Merlin waves his arms over you and suddenly you become disoriented. Your vision blurs. It seems you are standing in a darkened cave, gazing into a crystal ball.

"
	ZERO?	GL-HINT-WARNING /?CND65
	INPUT	1,50,RT-STOP-READ
?CND65:	SET	'MSG?,GL-HINT-WARNING
	ICALL1	V-HINT
	IN?	CH-PLAYER,RM-CRYSTAL-CAVE /?PRG11
	ZERO?	M? /?PRG11
	ZERO?	MSG? /?PRG11
	PRINTI	"Your vision clears and Merlin says, ""Welcome back, Arthur.""
"
	JUMP	?PRG11
?CCL64:	ZERO?	M? /?CND77
	PRINTC	34
?CND77:	PRINTI	"Please type "
	ZERO?	P-CAN-UNDO /?CND79
	PRINTI	"UNDO, "
?CND79:	PRINTI	"RESTORE, RESTART, QUIT, or HINT."
	ZERO?	M? /?CND81
	PRINTC	34
?CND81:	CRLF	
	JUMP	?PRG22


	.FUNCT	NO-NEED:ANY:0:2,STR,OBJ
	ZERO?	OBJ \?CND1
	SET	'OBJ,PRSO
?CND1:	SET	'CLOCK-WAIT,TRUE-VALUE
	PRINTC	91
	ICALL	RT-PRINT-OBJ,WINNER,K-ART-THE,TRUE-VALUE,STR?80
	PRINTI	"n't need to "
	ZERO?	STR /?CCL5
	PRINT	STR
	JUMP	?CND3
?CCL5:	GET	PARSE-RESULT,1
	PRINTB	STACK
?CND3:	EQUAL?	STR,STR?120 \?CCL8
	PRINTI	" in that "
	ICALL2	RT-PRINT-DESC,INTDIR
	JUMP	?CND6
?CCL8:	ZERO?	OBJ /?CND6
	ICALL	RT-PRINT-OBJ,OBJ,K-ART-THE
?CND6:	PRINTR	".]"


	.FUNCT	RT-TAKE-WITH-MSG:ANY:2:2,OBJ,WITH,SIZE
	GETPT	OBJ,P?SIZE
	GETB	STACK,K-SIZE >SIZE
	GRTR?	SIZE,1 /?CTR2
	EQUAL?	GL-PLAYER-FORM,K-FORM-EEL,K-FORM-TURTLE,K-FORM-SALAMANDER \?CCL3
?CTR2:	ICALL	RT-PRINT-OBJ,OBJ,K-ART-THE,TRUE-VALUE,STR?69
	PRINTI	" too big for"
	ICALL	RT-PRINT-OBJ,WITH,K-ART-THE
	PRINTR	"."
?CCL3:	PRINTI	"You pick up"
	ICALL	RT-PRINT-OBJ,OBJ,K-ART-THE
	PRINTI	", shake"
	ICALL	RT-PRINT-OBJ,OBJ,K-ART-HIM
	PRINTI	" a few times, and then drop"
	ICALL	RT-PRINT-OBJ,OBJ,K-ART-HIM
	PRINTR	" again."


	.FUNCT	RT-YOU-CANT-MSG:ANY:0:3,STR,WHILE,STR1
	ICALL	RT-PRINT-OBJ,WINNER,K-ART-THE,TRUE-VALUE
	PRINTI	" can't "
	ZERO?	STR \?CCL3
	GET	PARSE-RESULT,1
	PRINTB	STACK
	JUMP	?CND1
?CCL3:	PRINT	STR
?CND1:	EQUAL?	STR,STR?120 \?CCL6
	PRINTI	" in that "
	ICALL2	RT-PRINT-DESC,INTDIR
	JUMP	?CND4
?CCL6:	ICALL	RT-PRINT-OBJ,PRSO,K-ART-THE
	ZERO?	STR1 /?CND4
	PRINTI	" while"
	ZERO?	WHILE /?CCL11
	ICALL	RT-PRINT-OBJ,WHILE,K-ART-HE,FALSE-VALUE,STR?69
	JUMP	?CND9
?CCL11:	ICALL	RT-PRINT-OBJ,PRSO,K-ART-HE,FALSE-VALUE,STR?69
?CND9:	PRINTC	32
	PRINT	STR1
?CND4:	PRINTR	"."


	.FUNCT	RT-ALREADY-MSG:ANY:1:2,OBJ,STR
	SET	'CLOCK-WAIT,TRUE-VALUE
	GRTR?	P-MULT,1 /?CND1
	DIROUT	D-TABLE-ON,K-DIROUT-TBL
?CND1:	ICALL	RT-PRINT-OBJ,OBJ,K-ART-THE,TRUE-VALUE,STR?69
	PRINTI	" already"
	ZERO?	STR /TRUE
	PRINTC	32
	PRINT	STR
	PRINTC	46
	GRTR?	P-MULT,1 \?CCL7
	CRLF	
	RTRUE	
?CCL7:	ICALL1	RT-AUTHOR-OFF
	RTRUE	


	.FUNCT	RT-NOT-LIKELY-MSG:ANY:2:2,OBJ,STR
	PRINTI	"It "
	CALL2	RT-PICK-NEXT,K-NOT-LIKELY-TBL
	PRINT	STACK
	PRINTI	" that"
	ICALL	RT-PRINT-OBJ,OBJ,K-ART-THE
	PRINTC	32
	PRINT	STR
	PRINTR	"."


	.FUNCT	RT-NO-POINT-MSG:ANY:1:1,STR
	PRINT	STR
	ICALL	RT-PRINT-OBJ,PRSO,K-ART-THE
	PRINTI	" would "
	CALL2	RT-PICK-NEXT,K-NO-POINT-TBL
	PRINT	STACK
	PRINTR	"."


	.FUNCT	RT-PICK-NEXT:ANY:1:1,TBL,CNT,STR,NT
	GETB	TBL,0 >CNT
	ADD	TBL,1
	GET	STACK,0 >NT
	GET	NT,CNT >STR
	GET	NT,0
	IGRTR?	'CNT,STACK \?CND1
	SET	'CNT,1
?CND1:	PUTB	TBL,0,CNT
	RETURN	STR


	.FUNCT	RT-NO-RESPONSE-MSG:ANY:0:1,OBJ
	ZERO?	OBJ \?CND1
	SET	'OBJ,PRSO
?CND1:	EQUAL?	OBJ,ROOMS \?CND3
	SET	'OBJ,WINNER
?CND3:	EQUAL?	OBJ,CH-PLAYER \?CCL7
	CALL	FIND-FLAG-HERE,FL-PERSON,CH-PLAYER >OBJ
	ZERO?	OBJ \?CCL7
	CALL2	RT-AUTHOR-MSG,K-TALK-TO-SELF-MSG
	RSTACK	
?CCL7:	FSET?	OBJ,FL-ASLEEP \?CCL11
	ICALL	RT-PRINT-OBJ,OBJ,K-ART-THE,TRUE-VALUE,STR?69
	PRINTR	" in no condition to respond."
?CCL11:	ICALL	RT-PRINT-OBJ,OBJ,K-ART-THE,TRUE-VALUE,STR?80
	PRINTR	"n't respond."


	.FUNCT	RT-FOOLISH-TO-TALK?:ANY:0:0
	EQUAL?	PRSO,FALSE-VALUE,ROOMS /FALSE
	FSET?	PRSO,FL-ALIVE /?CCL5
	CALL1	RT-NO-RESPONSE-MSG
	RSTACK	
?CCL5:	EQUAL?	PRSO,CH-PLAYER,PRSI,WINNER \?CCL7
	CALL1	RT-WASTE-OF-TIME-MSG
	RSTACK	
?CCL7:	ICALL2	THIS-IS-IT,PRSO
	RFALSE	


	.FUNCT	RT-WASTE-OF-TIME-MSG:ANY:0:0
	PRINTI	"That would "
	CALL2	RT-PICK-NEXT,K-NO-POINT-TBL
	PRINT	STACK
	PRINTR	"."


	.FUNCT	FIND-FLAG-LG:ANY:2:3,RM,FLAG,FLAG2,TBL,OBJ,CNT,SIZE
	GETPT	RM,P?GLOBAL >TBL
	ZERO?	TBL /FALSE
	PTSIZE	TBL
	DIV	STACK,2
	SUB	STACK,1 >SIZE
?PRG4:	GET	TBL,CNT >OBJ
	FSET?	OBJ,FLAG \?CCL8
	FSET?	OBJ,FL-INVISIBLE /?CCL8
	ZERO?	FLAG2 /?CTR7
	FSET?	OBJ,FLAG2 \?CCL8
?CTR7:	RETURN	OBJ
?CCL8:	IGRTR?	'CNT,SIZE \?PRG4
	RFALSE	


	.FUNCT	FIND-FLAG-HERE:ANY:1:3,FLAG,NOT1,NOT2,OBJ
	FIRST?	HERE >OBJ /?PRG2
?PRG2:	ZERO?	OBJ /FALSE
	FSET?	OBJ,FLAG \?CCL8
	FSET?	OBJ,FL-INVISIBLE /?CCL8
	EQUAL?	OBJ,NOT1,NOT2 /?CCL8
	RETURN	OBJ
?CCL8:	NEXT?	OBJ >OBJ /?PRG2
	JUMP	?PRG2


	.FUNCT	HAR-HAR:ANY:0:0
	SET	'CLOCK-WAIT,TRUE-VALUE
	PRINTR	"[You can't be serious.]"


	.FUNCT	RT-IMPOSSIBLE-MSG:ANY:0:0
	SET	'CLOCK-WAIT,TRUE-VALUE
	PRINTR	"[That's impossible.]"


	.FUNCT	RT-WONT-HELP-MSG:ANY:0:0
	SET	'CLOCK-WAIT,TRUE-VALUE
	PRINTR	"[That would be a waste of time.]"


	.FUNCT	RT-META-IN?:ANY:2:2,OBJ,CONT,L
	LOC	OBJ >L
?PRG1:	ZERO?	L /FALSE
	EQUAL?	L,CONT /TRUE
	LOC	L >L
	JUMP	?PRG1


	.FUNCT	RT-CANT-REACH-MSG:ANY:0:2,OBJ1,OBJ2
	ZERO?	OBJ1 \?CND1
	SET	'OBJ1,PRSO
?CND1:	ICALL	RT-PRINT-OBJ,WINNER,K-ART-THE,TRUE-VALUE
	PRINTI	" can't reach"
	ICALL	RT-PRINT-OBJ,OBJ1,K-ART-THE
	ZERO?	OBJ2 /?CND3
	PRINTI	" from"
	ICALL	RT-PRINT-OBJ,OBJ2,K-ART-THE
?CND3:	PRINTR	"."


	.FUNCT	RT-I-SUNSET:ANY:0:0
	ADD	GL-MOVES,1440
	ICALL	RT-QUEUE,RT-I-SUNSET,STACK
	FSET?	HERE,FL-INDOORS /FALSE
	PRINTR	"
Daylight begins to fade. Soon it will be dark."


	.FUNCT	RT-COMMA-MSG:ANY:1:1,MORE?
	ZERO?	MORE? /?CCL3
	PRINTC	44
	RTRUE	
?CCL3:	PRINTI	" and"
	RTRUE	


	.FUNCT	RT-MOVE-ALL:ANY:1:2,FROM,TO,NXT,OBJ,CNT
	FIRST?	FROM >OBJ /?PRG2
?PRG2:	ZERO?	OBJ \?CCL6
	RETURN	CNT
?CCL6:	NEXT?	OBJ >NXT /?BOGUS7
?BOGUS7:	ZERO?	TO /?CCL10
	MOVE	OBJ,TO
	JUMP	?CND8
?CCL10:	REMOVE	OBJ
?CND8:	INC	'CNT
	SET	'OBJ,NXT
	JUMP	?PRG2


	.FUNCT	RT-MOVE-ALL-BUT-WORN:ANY:1:2,FROM,TO,NXT,OBJ,CNT
	FIRST?	FROM >OBJ /?PRG2
?PRG2:	ZERO?	OBJ \?CCL6
	RETURN	CNT
?CCL6:	NEXT?	OBJ >NXT /?BOGUS7
?BOGUS7:	FSET?	OBJ,FL-WORN /?CND8
	ZERO?	TO /?CCL12
	MOVE	OBJ,TO
	JUMP	?CND10
?CCL12:	REMOVE	OBJ
?CND10:	INC	'CNT
?CND8:	SET	'OBJ,NXT
	JUMP	?PRG2


	.FUNCT	RT-CENTER-STRING:ANY:1:1,STR,?TMP2,?TMP1
	DIROUT	K-D-TBL-ON,K-DIROUT-TBL
	PRINT	STR
	DIROUT	K-D-TBL-OFF
	WINGET	-3,K-W-YCURPOS >?TMP1
	WINGET	-3,K-W-XSIZE >?TMP2
	GET	0,24
	SUB	?TMP2,STACK
	DIV	STACK,2
	ADD	STACK,1
	CURSET	?TMP1,STACK
	GET	K-DIROUT-TBL,0
	PRINTT	K-DIROUT-TBL+2,STACK
	CRLF	
	RTRUE	

	.ENDI
